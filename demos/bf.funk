set(myFile, file(join(demos, separator(), hello, char(XCV), world, dot(), bf)))
set(code, myFile())
set(memory, array())
set(variable(pointer), NULLA)
set(braces, array())
set(variable(ip), NULLA)
set(codeLength, length(code))
set(rightBrace, char(XCIII))

for(NULLA, CCC, () => push(memory, NULLA))

function getPointer() {
	return get(variable(pointer))
}

function getIp() {
	return get(variable(ip))
}

function incrementIp() {
	set(variable(ip), add(getIp(), I))
}

set(commands, map(
	// .
	dot(), () => printChar(memory(getPointer())),
	// ,
	char(XLIV), () => memory(getPointer(), substring(readLine(), NULLA)),
	// <
	char(LX), () => set(variable(pointer), subtract(getPointer(), I)),
	// >
	char(LXII), () => set(variable(pointer), add(getPointer(), I)),
	// +
	char(XLIII), () => memory(getPointer(), add(memory(getPointer()), I)),
	// -
	char(XLV), () => memory(getPointer(), subtract(memory(getPointer()), I)),
	// [
	char(XCI), {
		if(equal(memory(getPointer()), NULLA), {
			while(() => and(notEqual(substring(code, getIp()), rightBrace), lessEqual(getIp(), codeLength)), {
				incrementIp()
			})
		}, () => push(braces, getIp()))
	},
	// ]
	rightBrace, {
		if(equal(length(braces), NULLA), incrementIp, {
			set(variable(ip), subtract(pop(braces), I))
		})
	}
))

while(() => less(getIp(), codeLength), {
	set(command, commands(substring(code, getIp())))
	if(notNull(command), command)

	incrementIp()
})